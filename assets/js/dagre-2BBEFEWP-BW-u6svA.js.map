{"version":3,"file":"dagre-2BBEFEWP-BW-u6svA.js","sources":["../../../node_modules/dagre-d3-es/src/graphlib/json.js","../../../node_modules/mermaid/dist/chunks/mermaid.core/dagre-2BBEFEWP.mjs"],"sourcesContent":["import * as _ from 'lodash-es';\nimport { Graph } from './graph.js';\n\nexport { write, read };\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound(),\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g),\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function (v) {\n    var nodeValue = g.node(v);\n    var parent = g.parent(v);\n    var node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function (e) {\n    var edgeValue = g.edge(e);\n    var edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function (entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function (entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n","import {\n  clear as clear2,\n  insertEdge,\n  insertEdgeLabel,\n  markers_default,\n  positionEdgeLabel\n} from \"./chunk-NCRKNZAS.mjs\";\nimport \"./chunk-WH6PBGIT.mjs\";\nimport {\n  clear,\n  clear2 as clear3,\n  insertCluster,\n  insertNode,\n  positionNode,\n  setNodeElem,\n  updateNodeBounds\n} from \"./chunk-CV3G5MRU.mjs\";\nimport {\n  getSubGraphTitleMargins\n} from \"./chunk-JSVUIEYQ.mjs\";\nimport \"./chunk-7RNWAQOT.mjs\";\nimport \"./chunk-62K37W7T.mjs\";\nimport \"./chunk-U37J5Y7L.mjs\";\nimport {\n  __name,\n  getConfig2 as getConfig,\n  log\n} from \"./chunk-VIW5F6AA.mjs\";\n\n// src/rendering-util/layout-algorithms/dagre/index.js\nimport { layout as dagreLayout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlibJson2 from \"dagre-d3-es/src/graphlib/json.js\";\nimport * as graphlib2 from \"dagre-d3-es/src/graphlib/index.js\";\n\n// src/rendering-util/layout-algorithms/dagre/mermaid-graphlib.js\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport * as graphlibJson from \"dagre-d3-es/src/graphlib/json.js\";\nvar clusterDb = /* @__PURE__ */ new Map();\nvar descendants = /* @__PURE__ */ new Map();\nvar parents = /* @__PURE__ */ new Map();\nvar clear4 = /* @__PURE__ */ __name(() => {\n  descendants.clear();\n  parents.clear();\n  clusterDb.clear();\n}, \"clear\");\nvar isDescendant = /* @__PURE__ */ __name((id, ancestorId) => {\n  const ancestorDescendants = descendants.get(ancestorId) || [];\n  log.trace(\"In isDescendant\", ancestorId, \" \", id, \" = \", ancestorDescendants.includes(id));\n  return ancestorDescendants.includes(id);\n}, \"isDescendant\");\nvar edgeInCluster = /* @__PURE__ */ __name((edge, clusterId) => {\n  const clusterDescendants = descendants.get(clusterId) || [];\n  log.info(\"Descendants of \", clusterId, \" is \", clusterDescendants);\n  log.info(\"Edge is \", edge);\n  if (edge.v === clusterId || edge.w === clusterId) {\n    return false;\n  }\n  if (!clusterDescendants) {\n    log.debug(\"Tilt, \", clusterId, \",not in descendants\");\n    return false;\n  }\n  return clusterDescendants.includes(edge.v) || isDescendant(edge.v, clusterId) || isDescendant(edge.w, clusterId) || clusterDescendants.includes(edge.w);\n}, \"edgeInCluster\");\nvar copy = /* @__PURE__ */ __name((clusterId, graph, newGraph, rootId) => {\n  log.warn(\n    \"Copying children of \",\n    clusterId,\n    \"root\",\n    rootId,\n    \"data\",\n    graph.node(clusterId),\n    rootId\n  );\n  const nodes = graph.children(clusterId) || [];\n  if (clusterId !== rootId) {\n    nodes.push(clusterId);\n  }\n  log.warn(\"Copying (nodes) clusterId\", clusterId, \"nodes\", nodes);\n  nodes.forEach((node) => {\n    if (graph.children(node).length > 0) {\n      copy(node, graph, newGraph, rootId);\n    } else {\n      const data = graph.node(node);\n      log.info(\"cp \", node, \" to \", rootId, \" with parent \", clusterId);\n      newGraph.setNode(node, data);\n      if (rootId !== graph.parent(node)) {\n        log.warn(\"Setting parent\", node, graph.parent(node));\n        newGraph.setParent(node, graph.parent(node));\n      }\n      if (clusterId !== rootId && node !== clusterId) {\n        log.debug(\"Setting parent\", node, clusterId);\n        newGraph.setParent(node, clusterId);\n      } else {\n        log.info(\"In copy \", clusterId, \"root\", rootId, \"data\", graph.node(clusterId), rootId);\n        log.debug(\n          \"Not Setting parent for node=\",\n          node,\n          \"cluster!==rootId\",\n          clusterId !== rootId,\n          \"node!==clusterId\",\n          node !== clusterId\n        );\n      }\n      const edges = graph.edges(node);\n      log.debug(\"Copying Edges\", edges);\n      edges.forEach((edge) => {\n        log.info(\"Edge\", edge);\n        const data2 = graph.edge(edge.v, edge.w, edge.name);\n        log.info(\"Edge data\", data2, rootId);\n        try {\n          if (edgeInCluster(edge, rootId)) {\n            log.info(\"Copying as \", edge.v, edge.w, data2, edge.name);\n            newGraph.setEdge(edge.v, edge.w, data2, edge.name);\n            log.info(\"newGraph edges \", newGraph.edges(), newGraph.edge(newGraph.edges()[0]));\n          } else {\n            log.info(\n              \"Skipping copy of edge \",\n              edge.v,\n              \"-->\",\n              edge.w,\n              \" rootId: \",\n              rootId,\n              \" clusterId:\",\n              clusterId\n            );\n          }\n        } catch (e) {\n          log.error(e);\n        }\n      });\n    }\n    log.debug(\"Removing node\", node);\n    graph.removeNode(node);\n  });\n}, \"copy\");\nvar extractDescendants = /* @__PURE__ */ __name((id, graph) => {\n  const children = graph.children(id);\n  let res = [...children];\n  for (const child of children) {\n    parents.set(child, id);\n    res = [...res, ...extractDescendants(child, graph)];\n  }\n  return res;\n}, \"extractDescendants\");\nvar findCommonEdges = /* @__PURE__ */ __name((graph, id1, id2) => {\n  const edges1 = graph.edges().filter((edge) => edge.v === id1 || edge.w === id1);\n  const edges2 = graph.edges().filter((edge) => edge.v === id2 || edge.w === id2);\n  const edges1Prim = edges1.map((edge) => {\n    return { v: edge.v === id1 ? id2 : edge.v, w: edge.w === id1 ? id1 : edge.w };\n  });\n  const edges2Prim = edges2.map((edge) => {\n    return { v: edge.v, w: edge.w };\n  });\n  const result = edges1Prim.filter((edgeIn1) => {\n    return edges2Prim.some((edge) => edgeIn1.v === edge.v && edgeIn1.w === edge.w);\n  });\n  return result;\n}, \"findCommonEdges\");\nvar findNonClusterChild = /* @__PURE__ */ __name((id, graph, clusterId) => {\n  const children = graph.children(id);\n  log.trace(\"Searching children of id \", id, children);\n  if (children.length < 1) {\n    return id;\n  }\n  let reserve;\n  for (const child of children) {\n    const _id = findNonClusterChild(child, graph, clusterId);\n    const commonEdges = findCommonEdges(graph, clusterId, _id);\n    if (_id) {\n      if (commonEdges.length > 0) {\n        reserve = _id;\n      } else {\n        return _id;\n      }\n    }\n  }\n  return reserve;\n}, \"findNonClusterChild\");\nvar getAnchorId = /* @__PURE__ */ __name((id) => {\n  if (!clusterDb.has(id)) {\n    return id;\n  }\n  if (!clusterDb.get(id).externalConnections) {\n    return id;\n  }\n  if (clusterDb.has(id)) {\n    return clusterDb.get(id).id;\n  }\n  return id;\n}, \"getAnchorId\");\nvar adjustClustersAndEdges = /* @__PURE__ */ __name((graph, depth) => {\n  if (!graph || depth > 10) {\n    log.debug(\"Opting out, no graph \");\n    return;\n  } else {\n    log.debug(\"Opting in, graph \");\n  }\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    if (children.length > 0) {\n      log.warn(\n        \"Cluster identified\",\n        id,\n        \" Replacement id in edges: \",\n        findNonClusterChild(id, graph, id)\n      );\n      descendants.set(id, extractDescendants(id, graph));\n      clusterDb.set(id, { id: findNonClusterChild(id, graph, id), clusterData: graph.node(id) });\n    }\n  });\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    const edges = graph.edges();\n    if (children.length > 0) {\n      log.debug(\"Cluster identified\", id, descendants);\n      edges.forEach((edge) => {\n        const d1 = isDescendant(edge.v, id);\n        const d2 = isDescendant(edge.w, id);\n        if (d1 ^ d2) {\n          log.warn(\"Edge: \", edge, \" leaves cluster \", id);\n          log.warn(\"Descendants of XXX \", id, \": \", descendants.get(id));\n          clusterDb.get(id).externalConnections = true;\n        }\n      });\n    } else {\n      log.debug(\"Not a cluster \", id, descendants);\n    }\n  });\n  for (let id of clusterDb.keys()) {\n    const nonClusterChild = clusterDb.get(id).id;\n    const parent = graph.parent(nonClusterChild);\n    if (parent !== id && clusterDb.has(parent) && !clusterDb.get(parent).externalConnections) {\n      clusterDb.get(id).id = parent;\n    }\n  }\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n    let v = e.v;\n    let w = e.w;\n    log.warn(\n      \"Fix XXX\",\n      clusterDb,\n      \"ids:\",\n      e.v,\n      e.w,\n      \"Translating: \",\n      clusterDb.get(e.v),\n      \" --- \",\n      clusterDb.get(e.w)\n    );\n    if (clusterDb.get(e.v) || clusterDb.get(e.w)) {\n      log.warn(\"Fixing and trying - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      if (v !== e.v) {\n        const parent = graph.parent(v);\n        clusterDb.get(parent).externalConnections = true;\n        edge.fromCluster = e.v;\n      }\n      if (w !== e.w) {\n        const parent = graph.parent(w);\n        clusterDb.get(parent).externalConnections = true;\n        edge.toCluster = e.w;\n      }\n      log.warn(\"Fix Replacing with XXX\", v, w, e.name);\n      graph.setEdge(v, w, edge, e.name);\n    }\n  });\n  log.warn(\"Adjusted Graph\", graphlibJson.write(graph));\n  extractor(graph, 0);\n  log.trace(clusterDb);\n}, \"adjustClustersAndEdges\");\nvar extractor = /* @__PURE__ */ __name((graph, depth) => {\n  log.warn(\"extractor - \", depth, graphlibJson.write(graph), graph.children(\"D\"));\n  if (depth > 10) {\n    log.error(\"Bailing out\");\n    return;\n  }\n  let nodes = graph.nodes();\n  let hasChildren = false;\n  for (const node of nodes) {\n    const children = graph.children(node);\n    hasChildren = hasChildren || children.length > 0;\n  }\n  if (!hasChildren) {\n    log.debug(\"Done, no node has children\", graph.nodes());\n    return;\n  }\n  log.debug(\"Nodes = \", nodes, depth);\n  for (const node of nodes) {\n    log.debug(\n      \"Extracting node\",\n      node,\n      clusterDb,\n      clusterDb.has(node) && !clusterDb.get(node).externalConnections,\n      !graph.parent(node),\n      graph.node(node),\n      graph.children(\"D\"),\n      \" Depth \",\n      depth\n    );\n    if (!clusterDb.has(node)) {\n      log.debug(\"Not a cluster\", node, depth);\n    } else if (!clusterDb.get(node).externalConnections && graph.children(node) && graph.children(node).length > 0) {\n      log.warn(\n        \"Cluster without external connections, without a parent and with children\",\n        node,\n        depth\n      );\n      const graphSettings = graph.graph();\n      let dir = graphSettings.rankdir === \"TB\" ? \"LR\" : \"TB\";\n      if (clusterDb.get(node)?.clusterData?.dir) {\n        dir = clusterDb.get(node).clusterData.dir;\n        log.warn(\"Fixing dir\", clusterDb.get(node).clusterData.dir, dir);\n      }\n      const clusterGraph = new graphlib.Graph({\n        multigraph: true,\n        compound: true\n      }).setGraph({\n        rankdir: dir,\n        nodesep: 50,\n        ranksep: 50,\n        marginx: 8,\n        marginy: 8\n      }).setDefaultEdgeLabel(function() {\n        return {};\n      });\n      log.warn(\"Old graph before copy\", graphlibJson.write(graph));\n      copy(node, graph, clusterGraph, node);\n      graph.setNode(node, {\n        clusterNode: true,\n        id: node,\n        clusterData: clusterDb.get(node).clusterData,\n        label: clusterDb.get(node).label,\n        graph: clusterGraph\n      });\n      log.warn(\"New graph after copy node: (\", node, \")\", graphlibJson.write(clusterGraph));\n      log.debug(\"Old graph after copy\", graphlibJson.write(graph));\n    } else {\n      log.warn(\n        \"Cluster ** \",\n        node,\n        \" **not meeting the criteria !externalConnections:\",\n        !clusterDb.get(node).externalConnections,\n        \" no parent: \",\n        !graph.parent(node),\n        \" children \",\n        graph.children(node) && graph.children(node).length > 0,\n        graph.children(\"D\"),\n        depth\n      );\n      log.debug(clusterDb);\n    }\n  }\n  nodes = graph.nodes();\n  log.warn(\"New list of nodes\", nodes);\n  for (const node of nodes) {\n    const data = graph.node(node);\n    log.warn(\" Now next level\", node, data);\n    if (data?.clusterNode) {\n      extractor(data.graph, depth + 1);\n    }\n  }\n}, \"extractor\");\nvar sorter = /* @__PURE__ */ __name((graph, nodes) => {\n  if (nodes.length === 0) {\n    return [];\n  }\n  let result = Object.assign([], nodes);\n  nodes.forEach((node) => {\n    const children = graph.children(node);\n    const sorted = sorter(graph, children);\n    result = [...result, ...sorted];\n  });\n  return result;\n}, \"sorter\");\nvar sortNodesByHierarchy = /* @__PURE__ */ __name((graph) => sorter(graph, graph.children()), \"sortNodesByHierarchy\");\n\n// src/rendering-util/layout-algorithms/dagre/index.js\nvar recursiveRender = /* @__PURE__ */ __name(async (_elem, graph, diagramType, id, parentCluster, siteConfig) => {\n  log.warn(\"Graph in recursive render:XAX\", graphlibJson2.write(graph), parentCluster);\n  const dir = graph.graph().rankdir;\n  log.trace(\"Dir in recursive render - dir:\", dir);\n  const elem = _elem.insert(\"g\").attr(\"class\", \"root\");\n  if (!graph.nodes()) {\n    log.info(\"No nodes found for\", graph);\n  } else {\n    log.info(\"Recursive render XXX\", graph.nodes());\n  }\n  if (graph.edges().length > 0) {\n    log.info(\"Recursive edges\", graph.edge(graph.edges()[0]));\n  }\n  const clusters = elem.insert(\"g\").attr(\"class\", \"clusters\");\n  const edgePaths = elem.insert(\"g\").attr(\"class\", \"edgePaths\");\n  const edgeLabels = elem.insert(\"g\").attr(\"class\", \"edgeLabels\");\n  const nodes = elem.insert(\"g\").attr(\"class\", \"nodes\");\n  await Promise.all(\n    graph.nodes().map(async function(v) {\n      const node = graph.node(v);\n      if (parentCluster !== void 0) {\n        const data = JSON.parse(JSON.stringify(parentCluster.clusterData));\n        log.trace(\n          \"Setting data for parent cluster XXX\\n Node.id = \",\n          v,\n          \"\\n data=\",\n          data.height,\n          \"\\nParent cluster\",\n          parentCluster.height\n        );\n        graph.setNode(parentCluster.id, data);\n        if (!graph.parent(v)) {\n          log.trace(\"Setting parent\", v, parentCluster.id);\n          graph.setParent(v, parentCluster.id, data);\n        }\n      }\n      log.info(\"(Insert) Node XXX\" + v + \": \" + JSON.stringify(graph.node(v)));\n      if (node?.clusterNode) {\n        log.info(\"Cluster identified XBX\", v, node.width, graph.node(v));\n        const { ranksep, nodesep } = graph.graph();\n        node.graph.setGraph({\n          ...node.graph.graph(),\n          ranksep: ranksep + 25,\n          nodesep\n        });\n        const o = await recursiveRender(\n          nodes,\n          node.graph,\n          diagramType,\n          id,\n          graph.node(v),\n          siteConfig\n        );\n        const newEl = o.elem;\n        updateNodeBounds(node, newEl);\n        node.diff = o.diff || 0;\n        log.info(\n          \"New compound node after recursive render XAX\",\n          v,\n          \"width\",\n          // node,\n          node.width,\n          \"height\",\n          node.height\n          // node.x,\n          // node.y\n        );\n        setNodeElem(newEl, node);\n      } else {\n        if (graph.children(v).length > 0) {\n          log.trace(\n            \"Cluster - the non recursive path XBX\",\n            v,\n            node.id,\n            node,\n            node.width,\n            \"Graph:\",\n            graph\n          );\n          log.trace(findNonClusterChild(node.id, graph));\n          clusterDb.set(node.id, { id: findNonClusterChild(node.id, graph), node });\n        } else {\n          log.trace(\"Node - the non recursive path XAX\", v, nodes, graph.node(v), dir);\n          await insertNode(nodes, graph.node(v), { config: siteConfig, dir });\n        }\n      }\n    })\n  );\n  const processEdges = /* @__PURE__ */ __name(async () => {\n    const edgePromises = graph.edges().map(async function(e) {\n      const edge = graph.edge(e.v, e.w, e.name);\n      log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n      log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \", e, \" \", JSON.stringify(graph.edge(e)));\n      log.info(\n        \"Fix\",\n        clusterDb,\n        \"ids:\",\n        e.v,\n        e.w,\n        \"Translating: \",\n        clusterDb.get(e.v),\n        clusterDb.get(e.w)\n      );\n      await insertEdgeLabel(edgeLabels, edge);\n    });\n    await Promise.all(edgePromises);\n  }, \"processEdges\");\n  await processEdges();\n  log.info(\"Graph before layout:\", JSON.stringify(graphlibJson2.write(graph)));\n  log.info(\"############################################# XXX\");\n  log.info(\"###                Layout                 ### XXX\");\n  log.info(\"############################################# XXX\");\n  dagreLayout(graph);\n  log.info(\"Graph after layout:\", JSON.stringify(graphlibJson2.write(graph)));\n  let diff = 0;\n  let { subGraphTitleTotalMargin } = getSubGraphTitleMargins(siteConfig);\n  await Promise.all(\n    sortNodesByHierarchy(graph).map(async function(v) {\n      const node = graph.node(v);\n      log.info(\n        \"Position XBX => \" + v + \": (\" + node.x,\n        \",\" + node.y,\n        \") width: \",\n        node.width,\n        \" height: \",\n        node.height\n      );\n      if (node?.clusterNode) {\n        node.y += subGraphTitleTotalMargin;\n        log.info(\n          \"A tainted cluster node XBX1\",\n          v,\n          node.id,\n          node.width,\n          node.height,\n          node.x,\n          node.y,\n          graph.parent(v)\n        );\n        clusterDb.get(node.id).node = node;\n        positionNode(node);\n      } else {\n        if (graph.children(v).length > 0) {\n          log.info(\n            \"A pure cluster node XBX1\",\n            v,\n            node.id,\n            node.x,\n            node.y,\n            node.width,\n            node.height,\n            graph.parent(v)\n          );\n          node.height += subGraphTitleTotalMargin;\n          graph.node(node.parentId);\n          const halfPadding = node?.padding / 2 || 0;\n          const labelHeight = node?.labelBBox?.height || 0;\n          const offsetY = labelHeight - halfPadding || 0;\n          log.debug(\"OffsetY\", offsetY, \"labelHeight\", labelHeight, \"halfPadding\", halfPadding);\n          await insertCluster(clusters, node);\n          clusterDb.get(node.id).node = node;\n        } else {\n          const parent = graph.node(node.parentId);\n          node.y += subGraphTitleTotalMargin / 2;\n          log.info(\n            \"A regular node XBX1 - using the padding\",\n            node.id,\n            \"parent\",\n            node.parentId,\n            node.width,\n            node.height,\n            node.x,\n            node.y,\n            \"offsetY\",\n            node.offsetY,\n            \"parent\",\n            parent,\n            parent?.offsetY,\n            node\n          );\n          positionNode(node);\n        }\n      }\n    })\n  );\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(edge), edge);\n    edge.points.forEach((point) => point.y += subGraphTitleTotalMargin / 2);\n    const startNode = graph.node(e.v);\n    var endNode = graph.node(e.w);\n    const paths = insertEdge(edgePaths, edge, clusterDb, diagramType, startNode, endNode, id);\n    positionEdgeLabel(edge, paths);\n  });\n  graph.nodes().forEach(function(v) {\n    const n = graph.node(v);\n    log.info(v, n.type, n.diff);\n    if (n.isGroup) {\n      diff = n.diff;\n    }\n  });\n  log.warn(\"Returning from recursive render XAX\", elem, diff);\n  return { elem, diff };\n}, \"recursiveRender\");\nvar render = /* @__PURE__ */ __name(async (data4Layout, svg) => {\n  const graph = new graphlib2.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: data4Layout.direction,\n    nodesep: data4Layout.config?.nodeSpacing || data4Layout.config?.flowchart?.nodeSpacing || data4Layout.nodeSpacing,\n    ranksep: data4Layout.config?.rankSpacing || data4Layout.config?.flowchart?.rankSpacing || data4Layout.rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const element = svg.select(\"g\");\n  markers_default(element, data4Layout.markers, data4Layout.type, data4Layout.diagramId);\n  clear3();\n  clear2();\n  clear();\n  clear4();\n  data4Layout.nodes.forEach((node) => {\n    graph.setNode(node.id, { ...node });\n    if (node.parentId) {\n      graph.setParent(node.id, node.parentId);\n    }\n  });\n  log.debug(\"Edges:\", data4Layout.edges);\n  data4Layout.edges.forEach((edge) => {\n    if (edge.start === edge.end) {\n      const nodeId = edge.start;\n      const specialId1 = nodeId + \"---\" + nodeId + \"---1\";\n      const specialId2 = nodeId + \"---\" + nodeId + \"---2\";\n      const node = graph.node(nodeId);\n      graph.setNode(specialId1, {\n        domId: specialId1,\n        id: specialId1,\n        parentId: node.parentId,\n        labelStyle: \"\",\n        label: \"\",\n        padding: 0,\n        shape: \"labelRect\",\n        // shape: 'rect',\n        style: \"\",\n        width: 10,\n        height: 10\n      });\n      graph.setParent(specialId1, node.parentId);\n      graph.setNode(specialId2, {\n        domId: specialId2,\n        id: specialId2,\n        parentId: node.parentId,\n        labelStyle: \"\",\n        padding: 0,\n        // shape: 'rect',\n        shape: \"labelRect\",\n        label: \"\",\n        style: \"\",\n        width: 10,\n        height: 10\n      });\n      graph.setParent(specialId2, node.parentId);\n      const edge1 = structuredClone(edge);\n      const edgeMid = structuredClone(edge);\n      const edge2 = structuredClone(edge);\n      edge1.label = \"\";\n      edge1.arrowTypeEnd = \"none\";\n      edge1.id = nodeId + \"-cyclic-special-1\";\n      edgeMid.arrowTypeStart = \"none\";\n      edgeMid.arrowTypeEnd = \"none\";\n      edgeMid.id = nodeId + \"-cyclic-special-mid\";\n      edge2.label = \"\";\n      if (node.isGroup) {\n        edge1.fromCluster = nodeId;\n        edge2.toCluster = nodeId;\n      }\n      edge2.id = nodeId + \"-cyclic-special-2\";\n      edge2.arrowTypeStart = \"none\";\n      graph.setEdge(nodeId, specialId1, edge1, nodeId + \"-cyclic-special-0\");\n      graph.setEdge(specialId1, specialId2, edgeMid, nodeId + \"-cyclic-special-1\");\n      graph.setEdge(specialId2, nodeId, edge2, nodeId + \"-cyc<lic-special-2\");\n    } else {\n      graph.setEdge(edge.start, edge.end, { ...edge }, edge.id);\n    }\n  });\n  log.warn(\"Graph at first:\", JSON.stringify(graphlibJson2.write(graph)));\n  adjustClustersAndEdges(graph);\n  log.warn(\"Graph after XAX:\", JSON.stringify(graphlibJson2.write(graph)));\n  const siteConfig = getConfig();\n  await recursiveRender(\n    element,\n    graph,\n    data4Layout.type,\n    data4Layout.diagramId,\n    void 0,\n    siteConfig\n  );\n}, \"render\");\nexport {\n  render\n};\n"],"names":["_.isUndefined","_.clone","_.map","graphlibJson.write","graphlib.Graph","graphlibJson2.write","dagreLayout","graphlib2.Graph","clear3","clear2","clear","getConfig"],"mappings":"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","x_google_ignoreList":[0,1]}