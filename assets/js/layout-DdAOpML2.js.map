{"version":3,"file":"layout-DdAOpML2.js","sources":["../../../node_modules/lodash-es/_flatRest.js","../../../node_modules/lodash-es/cloneDeep.js","../../../node_modules/lodash-es/forIn.js","../../../node_modules/lodash-es/forOwn.js","../../../node_modules/lodash-es/_baseGt.js","../../../node_modules/lodash-es/mapValues.js","../../../node_modules/lodash-es/max.js","../../../node_modules/lodash-es/minBy.js","../../../node_modules/lodash-es/_baseSortBy.js","../../../node_modules/lodash-es/_compareAscending.js","../../../node_modules/lodash-es/_compareMultiple.js","../../../node_modules/lodash-es/_baseOrderBy.js","../../../node_modules/lodash-es/_basePick.js","../../../node_modules/lodash-es/pick.js","../../../node_modules/lodash-es/_baseRange.js","../../../node_modules/lodash-es/_createRange.js","../../../node_modules/lodash-es/range.js","../../../node_modules/lodash-es/sortBy.js","../../../node_modules/lodash-es/uniqueId.js","../../../node_modules/lodash-es/_baseZipObject.js","../../../node_modules/lodash-es/zipObject.js","../../../node_modules/dagre-d3-es/src/dagre/data/list.js","../../../node_modules/dagre-d3-es/src/dagre/greedy-fas.js","../../../node_modules/dagre-d3-es/src/dagre/acyclic.js","../../../node_modules/dagre-d3-es/src/dagre/util.js","../../../node_modules/dagre-d3-es/src/dagre/add-border-segments.js","../../../node_modules/dagre-d3-es/src/dagre/coordinate-system.js","../../../node_modules/dagre-d3-es/src/dagre/normalize.js","../../../node_modules/dagre-d3-es/src/dagre/rank/util.js","../../../node_modules/dagre-d3-es/src/dagre/rank/feasible-tree.js","../../../node_modules/dagre-d3-es/src/graphlib/alg/topsort.js","../../../node_modules/dagre-d3-es/src/graphlib/alg/dfs.js","../../../node_modules/dagre-d3-es/src/graphlib/alg/postorder.js","../../../node_modules/dagre-d3-es/src/graphlib/alg/preorder.js","../../../node_modules/dagre-d3-es/src/dagre/rank/network-simplex.js","../../../node_modules/dagre-d3-es/src/dagre/rank/index.js","../../../node_modules/dagre-d3-es/src/dagre/nesting-graph.js","../../../node_modules/dagre-d3-es/src/dagre/order/add-subgraph-constraints.js","../../../node_modules/dagre-d3-es/src/dagre/order/build-layer-graph.js","../../../node_modules/dagre-d3-es/src/dagre/order/cross-count.js","../../../node_modules/dagre-d3-es/src/dagre/order/init-order.js","../../../node_modules/dagre-d3-es/src/dagre/order/barycenter.js","../../../node_modules/dagre-d3-es/src/dagre/order/resolve-conflicts.js","../../../node_modules/dagre-d3-es/src/dagre/order/sort.js","../../../node_modules/dagre-d3-es/src/dagre/order/sort-subgraph.js","../../../node_modules/dagre-d3-es/src/dagre/order/index.js","../../../node_modules/dagre-d3-es/src/dagre/parent-dummy-chains.js","../../../node_modules/dagre-d3-es/src/dagre/position/bk.js","../../../node_modules/dagre-d3-es/src/dagre/position/index.js","../../../node_modules/dagre-d3-es/src/dagre/layout.js"],"sourcesContent":["import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import baseFor from './_baseFor.js';\nimport castFunction from './_castFunction.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\nfunction forIn(object, iteratee) {\n  return object == null\n    ? object\n    : baseFor(object, castFunction(iteratee), keysIn);\n}\n\nexport default forIn;\n","import baseForOwn from './_baseForOwn.js';\nimport castFunction from './_castFunction.js';\n\n/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forOwn(object, iteratee) {\n  return object && baseForOwn(object, castFunction(iteratee));\n}\n\nexport default forOwn;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nexport default baseGt;\n","import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nexport default mapValues;\n","import baseExtremum from './_baseExtremum.js';\nimport baseGt from './_baseGt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nexport default max;\n","import baseExtremum from './_baseExtremum.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseLt from './_baseLt.js';\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nexport default minBy;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexport default baseSortBy;\n","import isSymbol from './isSymbol.js';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n","import compareAscending from './_compareAscending.js';\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nexport default compareMultiple;\n","import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n","import basePickBy from './_basePickBy.js';\nimport hasIn from './hasIn.js';\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nexport default basePick;\n","import basePick from './_basePick.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nexport default pick;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nexport default baseRange;\n","import baseRange from './_baseRange.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nexport default createRange;\n","import createRange from './_createRange.js';\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nexport default range;\n","import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n","import toString from './toString.js';\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nexport default uniqueId;\n","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nexport default baseZipObject;\n","import assignValue from './_assignValue.js';\nimport baseZipObject from './_baseZipObject.js';\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nexport default zipObject;\n","/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nexport { List };\n\nclass List {\n  constructor() {\n    var sentinel = {};\n    sentinel._next = sentinel._prev = sentinel;\n    this._sentinel = sentinel;\n  }\n  dequeue() {\n    var sentinel = this._sentinel;\n    var entry = sentinel._prev;\n    if (entry !== sentinel) {\n      unlink(entry);\n      return entry;\n    }\n  }\n  enqueue(entry) {\n    var sentinel = this._sentinel;\n    if (entry._prev && entry._next) {\n      unlink(entry);\n    }\n    entry._next = sentinel._next;\n    sentinel._next._prev = entry;\n    sentinel._next = entry;\n    entry._prev = sentinel;\n  }\n  toString() {\n    var strs = [];\n    var sentinel = this._sentinel;\n    var curr = sentinel._prev;\n    while (curr !== sentinel) {\n      strs.push(JSON.stringify(curr, filterOutLinks));\n      curr = curr._prev;\n    }\n    return '[' + strs.join(', ') + ']';\n  }\n}\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { List } from './data/list.js';\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nexport { greedyFAS };\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(\n    _.map(results, function (e) {\n      return g.outEdges(e.v, e.w);\n    }),\n  );\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while ((entry = sources.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry['in'] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _.forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, { v: v, in: 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, (fasGraph.node(e.v).out += weight));\n    maxIn = Math.max(maxIn, (fasGraph.node(e.w)['in'] += weight));\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function () {\n    return new List();\n  });\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n}\n","import * as _ from 'lodash-es';\nimport { greedyFAS } from './greedy-fas.js';\n\nexport { run, undo };\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === 'greedy' ? greedyFAS(g, weightFn(g)) : dfsFAS(g);\n  _.forEach(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId('rev'));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (Object.prototype.hasOwnProperty.call(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function (e) {\n      if (Object.prototype.hasOwnProperty.call(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function (e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\n\nexport {\n  addDummyNode,\n  simplify,\n  asNonCompoundGraph,\n  successorWeights,\n  predecessorWeights,\n  intersectRect,\n  buildLayerMatrix,\n  normalizeRanks,\n  removeEmptyRanks,\n  addBorderNode,\n  maxRank,\n  partition,\n  time,\n  notime,\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen),\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle');\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function () {\n    return [];\n  });\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    }),\n  );\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (_.has(node, 'rank')) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    }),\n  );\n\n  var layers = [];\n  _.forEach(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function (vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0,\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, 'border', node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(\n    _.map(g.nodes(), function (v) {\n      var rank = g.node(v).rank;\n      if (!_.isUndefined(rank)) {\n        return rank;\n      }\n    }),\n  );\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + ' time: ' + (_.now() - start) + 'ms');\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { addBorderSegments };\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (Object.prototype.hasOwnProperty.call(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n","import * as _ from 'lodash-es';\n\nexport { adjust, undo };\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g);\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, reverseYOne);\n    if (Object.prototype.hasOwnProperty.call(edge, 'y')) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, swapXYOne);\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n","/**\n * TypeScript type imports:\n *\n * @import { Graph } from '../graphlib/graph.js';\n */\nimport * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, undo };\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\n/**\n * @param {Graph} g\n */\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  /**\n   * @typedef {Object} Attrs\n   * @property {number} width\n   * @property {number} height\n   * @property {ReturnType<Graph[\"node\"]>} edgeLabel\n   * @property {any} edgeObj\n   * @property {ReturnType<Graph[\"node\"]>[\"rank\"]} rank\n   * @property {string} [dummy]\n   * @property {ReturnType<Graph[\"node\"]>[\"labelpos\"]} [labelpos]\n   */\n\n  /** @type {Attrs | undefined} */\n  var attrs = undefined;\n  var dummy, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank,\n    };\n    dummy = util.addDummyNode(g, 'edge', attrs, '_d');\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = 'edge-label';\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { longestPath, slack };\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (Object.prototype.hasOwnProperty.call(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.min(\n      _.map(g.outEdges(v), function (e) {\n        return dfs(e.w) - g.edge(e).minlen;\n      }),\n    );\n\n    if (\n      rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n      rank === undefined || // return value of _.map([]) for Lodash 4\n      rank === null\n    ) {\n      // return value of _.map([null])\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport { slack } from './util.js';\n\nexport { feasibleTree };\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function (e) {\n      var edgeV = e.v,\n        w = v === edgeV ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { topsort, CycleException };\n\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (Object.prototype.hasOwnProperty.call(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing\n","import * as _ from 'lodash-es';\n\nexport { dfs };\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [];\n  var visited = {};\n  _.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v);\n    }\n\n    doDfs(g, v, order === 'post', visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!Object.prototype.hasOwnProperty.call(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) {\n      acc.push(v);\n    }\n    _.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}\n","import { dfs } from './dfs.js';\n\nexport { postorder };\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, 'post');\n}\n","import { dfs } from './dfs.js';\n\nexport { preorder };\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, 'pre');\n}\n","import * as _ from 'lodash-es';\nimport * as alg from '../../graphlib/alg/index.js';\nimport { simplify } from '../util.js';\nimport { feasibleTree } from './feasible-tree.js';\nimport { longestPath, slack } from './util.js';\n\nexport { networkSimplex };\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  longestPath(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = alg.postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.forEach(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child,\n      other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n        otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _.forEach(tree.neighbors(v), function (w) {\n    if (!Object.prototype.hasOwnProperty.call(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function (edge) {\n    return (\n      flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n      flip !== isDescendant(t, t.node(edge.w), tailLabel)\n    );\n  });\n\n  return _.minBy(candidates, function (edge) {\n    return slack(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  });\n  var vs = alg.preorder(t, root);\n  vs = vs.slice(1);\n  _.forEach(vs, function (v) {\n    var parent = t.node(v).parent,\n      edge = g.edge(v, parent),\n      flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n","import { feasibleTree } from './feasible-tree.js';\nimport { networkSimplex } from './network-simplex.js';\nimport { longestPath } from './util.js';\n\nexport { rank };\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);\n      break;\n    case 'tight-tree':\n      tightTreeRanker(g);\n      break;\n    case 'longest-path':\n      longestPathRanker(g);\n      break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, cleanup };\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, 'root', {}, '_root');\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.forEach(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.forEach(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, '_bt');\n  var bottom = util.addBorderNode(g, '_bb');\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.forEach(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.forEach(g.children(), function (v) {\n    dfs(v, 1);\n  });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(\n    g.edges(),\n    function (acc, e) {\n      return acc + g.edge(e).weight;\n    },\n    0,\n  );\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { addSubgraphConstraints };\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n    rootPrev;\n\n  _.forEach(vs, function (v) {\n    var child = g.parent(v),\n      parent,\n      prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\n\nexport { buildLayerGraph };\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n    result = new Graph({ compound: true })\n      .setGraph({ root: root })\n      .setDefaultNodeLabel(function (v) {\n        return g.node(v);\n      });\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v),\n      parent = g.parent(v);\n\n    if (node.rank === rank || (node.minRank <= rank && rank <= node.maxRank)) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.forEach(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v,\n          edge = result.edge(u, v),\n          weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (Object.prototype.hasOwnProperty.call(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank],\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId('_root'))));\n  return v;\n}\n","import * as _ from 'lodash-es';\n\nexport { crossCount };\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(\n    southLayer,\n    _.map(southLayer, function (v, i) {\n      return i;\n    }),\n  );\n  var southEntries = _.flatten(\n    _.map(northLayer, function (v) {\n      return _.sortBy(\n        _.map(g.outEdges(v), function (e) {\n          return { pos: southPos[e.w], weight: g.edge(e).weight };\n        }),\n        'pos',\n      );\n    }),\n  );\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function () {\n    return 0;\n  });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.forEach(\n    // @ts-expect-error\n    southEntries.forEach(function (entry) {\n      var index = entry.pos + firstIndex;\n      tree[index] += entry.weight;\n      var weightSum = 0;\n      // @ts-expect-error\n      while (index > 0) {\n        // @ts-expect-error\n        if (index % 2) {\n          weightSum += tree[index + 1];\n        }\n        // @ts-expect-error\n        index = (index - 1) >> 1;\n        tree[index] += entry.weight;\n      }\n      cc += entry.weight * weightSum;\n    }),\n  );\n\n  return cc;\n}\n","import * as _ from 'lodash-es';\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nexport function initOrder(g) {\n  var visited = {};\n  var simpleNodes = _.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _.max(\n    _.map(simpleNodes, function (v) {\n      return g.node(v).rank;\n    }),\n  );\n  var layers = _.map(_.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n","import * as _ from 'lodash-es';\n\nexport { barycenter };\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function (v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(\n        inV,\n        function (acc, e) {\n          var edge = g.edge(e),\n            nodeU = g.node(e.v);\n          return {\n            sum: acc.sum + edge.weight * nodeU.order,\n            weight: acc.weight + edge.weight,\n          };\n        },\n        { sum: 0, weight: 0 },\n      );\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight,\n      };\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { resolveConflicts };\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function (entry, i) {\n    var tmp = (mappedEntries[entry.v] = {\n      indegree: 0,\n      in: [],\n      out: [],\n      vs: [entry.v],\n      i: i,\n    });\n    if (!_.isUndefined(entry.barycenter)) {\n      // @ts-expect-error\n      tmp.barycenter = entry.barycenter;\n      // @ts-expect-error\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function (entry) {\n    // @ts-expect-error\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (\n        _.isUndefined(uEntry.barycenter) ||\n        _.isUndefined(vEntry.barycenter) ||\n        uEntry.barycenter >= vEntry.barycenter\n      ) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry['in'].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(\n    _.filter(entries, function (entry) {\n      return !entry.merged;\n    }),\n    function (entry) {\n      return _.pick(entry, ['vs', 'i', 'barycenter', 'weight']);\n    },\n  );\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\n\nexport { sort };\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function (entry) {\n    return Object.prototype.hasOwnProperty.call(entry, 'barycenter');\n  });\n  var sortable = parts.lhs,\n    unsortable = _.sortBy(parts.rhs, function (entry) {\n      return -entry.i;\n    }),\n    vs = [],\n    sum = 0,\n    weight = 0,\n    vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n","import * as _ from 'lodash-es';\nimport { barycenter } from './barycenter.js';\nimport { resolveConflicts } from './resolve-conflicts.js';\nimport { sort } from './sort.js';\n\nexport { sortSubgraph };\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (Object.prototype.hasOwnProperty.call(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br]);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!Object.prototype.hasOwnProperty.call(result, 'barycenter')) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter =\n        (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function (entry) {\n    entry.vs = _.flatten(\n      entry.vs.map(function (v) {\n        if (subgraphs[v]) {\n          return subgraphs[v].vs;\n        }\n        return v;\n      }),\n    );\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter =\n      (target.barycenter * target.weight + other.barycenter * other.weight) /\n      (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\nimport { addSubgraphConstraints } from './add-subgraph-constraints.js';\nimport { buildLayerGraph } from './build-layer-graph.js';\nimport { crossCount } from './cross-count.js';\nimport { initOrder } from './init-order.js';\nimport { sortSubgraph } from './sort-subgraph.js';\n\nexport { order };\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n    downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), 'inEdges'),\n    upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), 'outEdges');\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n    best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function (rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.forEach(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { parentDummyChains };\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (\n          pathIdx < path.length - 1 &&\n          g.node((pathV = path[pathIdx + 1])).minRank <= node.rank\n        ) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.forEach(g.children(), dfs);\n\n  return result;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nexport {\n  positionX,\n  findType1Conflicts,\n  findType2Conflicts,\n  addConflict,\n  hasConflict,\n  verticalAlignment,\n  horizontalCompaction,\n  alignCoordinates,\n  findSmallestWidthAlignment,\n  balance,\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.forEach(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n        k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i + 1), function (scanNode) {\n          _.forEach(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u),\n              uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        // @ts-expect-error\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.forEach(_.range(southPos, southEnd), function (i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n      nextNorthPos,\n      southPos = 0;\n\n    _.forEach(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          // @ts-expect-error\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return !!conflicts[v] && Object.prototype.hasOwnProperty.call(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n    align = {},\n    pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function (layer) {\n    var prevIdx = -1;\n    _.forEach(layer, function (v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n    blockG = buildBlockGraph(g, layering, root, reverseSep),\n    borderType = reverseSep ? 'borderLeft' : 'borderRight';\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }\n\n  // First pass, assign smallest coordinates\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function (acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  }\n\n  // Second pass, assign greatest coordinates\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function (acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n\n    var node = g.node(elem);\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, blockG.predecessors.bind(blockG));\n  iterate(pass2, blockG.successors.bind(blockG));\n\n  // Assign x coordinates to all nodes\n  _.forEach(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n    graphLabel = g.graph(),\n    sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function (layer) {\n    var u;\n    _.forEach(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n          prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n    alignToMin = _.min(alignToVals),\n    alignToMax = _.max(alignToVals);\n\n  _.forEach(['u', 'd'], function (vert) {\n    _.forEach(['l', 'r'], function (horiz) {\n      var alignment = vert + horiz,\n        xs = xss[alignment],\n        delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n      delta = horiz === 'l' ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g);\n  var conflicts = _.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering;\n  _.forEach(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _.values(layering).reverse();\n    _.forEach(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _.map(adjustedLayering, function (inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = (vert === 'u' ? g.predecessors : g.successors).bind(g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r');\n      if (horiz === 'r') {\n        xs = _.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n\n    sum += vLabel.width / 2;\n    if (Object.prototype.hasOwnProperty.call(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2;\n          break;\n        case 'r':\n          delta = vLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (Object.prototype.hasOwnProperty.call(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2;\n          break;\n        case 'r':\n          delta = -wLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\nimport { positionX } from './bk.js';\n\nexport { position };\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.forOwn(positionX(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _.forEach(layering, function (layer) {\n    var maxHeight = _.max(\n      _.map(layer, function (v) {\n        return g.node(v).height;\n      }),\n    );\n    _.forEach(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { addBorderSegments } from './add-border-segments.js';\nimport * as coordinateSystem from './coordinate-system.js';\nimport * as acyclic from './acyclic.js';\nimport * as normalize from './normalize.js';\nimport { rank } from './rank/index.js';\nimport * as nestingGraph from './nesting-graph.js';\nimport { order } from './order/index.js';\nimport { parentDummyChains } from './parent-dummy-chains.js';\nimport { position } from './position/index.js';\nimport * as util from './util.js';\n\nexport { layout };\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time('layout', () => {\n    var layoutGraph = time('  buildLayoutGraph', () => buildLayoutGraph(g));\n    time('  runLayout', () => runLayout(layoutGraph, time));\n    time('  updateInputGraph', () => updateInputGraph(g, layoutGraph));\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', () => makeSpaceForEdgeLabels(g));\n  time('    removeSelfEdges', () => removeSelfEdges(g));\n  time('    acyclic', () => acyclic.run(g));\n  time('    nestingGraph.run', () => nestingGraph.run(g));\n  time('    rank', () => rank(util.asNonCompoundGraph(g)));\n  time('    injectEdgeLabelProxies', () => injectEdgeLabelProxies(g));\n  time('    removeEmptyRanks', () => util.removeEmptyRanks(g));\n  time('    nestingGraph.cleanup', () => nestingGraph.cleanup(g));\n  time('    normalizeRanks', () => util.normalizeRanks(g));\n  time('    assignRankMinMax', () => assignRankMinMax(g));\n  time('    removeEdgeLabelProxies', () => removeEdgeLabelProxies(g));\n  time('    normalize.run', () => normalize.run(g));\n  time('    parentDummyChains', () => parentDummyChains(g));\n  time('    addBorderSegments', () => addBorderSegments(g));\n  time('    order', () => order(g));\n  time('    insertSelfEdges', () => insertSelfEdges(g));\n  time('    adjustCoordinateSystem', () => coordinateSystem.adjust(g));\n  time('    position', () => position(g));\n  time('    positionSelfEdges', () => positionSelfEdges(g));\n  time('    removeBorderNodes', () => removeBorderNodes(g));\n  time('    normalize.undo', () => normalize.undo(g));\n  time('    fixupEdgeLabelCoords', () => fixupEdgeLabelCoords(g));\n  time('    undoCoordinateSystem', () => coordinateSystem.undo(g));\n  time('    translateGraph', () => translateGraph(g));\n  time('    assignNodeIntersects', () => assignNodeIntersects(g));\n  time('    reversePoints', () => reversePointsForReversedEdges(g));\n  time('    acyclic.undo', () => acyclic.undo(g));\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (Object.prototype.hasOwnProperty.call(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r',\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(\n    _.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs)),\n  );\n\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(\n      e,\n      _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs)),\n    );\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      // @ts-expect-error\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (Object.prototype.hasOwnProperty.call(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(\n          g,\n          'selfedge',\n          {\n            width: selfEdge.label.width,\n            height: selfEdge.label.height,\n            rank: node.rank,\n            order: i + ++orderShift,\n            e: selfEdge.e,\n            label: selfEdge.label,\n          },\n          '_se',\n        );\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + (2 * dx) / 3, y: y - dy },\n        { x: x + (5 * dx) / 6, y: y - dy },\n        { x: x + dx, y: y },\n        { x: x + (5 * dx) / 6, y: y + dy },\n        { x: x + (2 * dx) / 3, y: y + dy },\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n"],"names":["_.constant","_.flatten","_.map","_.forEach","_.range","run","_.uniqueId","undo","_.isUndefined","min","_.min","_.has","addBorderNode","_.max","util.addDummyNode","_.minBy","dfs","_.isArray","_.each","postorder","alg.postorder","_.find","_.filter","alg.preorder","_.values","util.addBorderNode","_.reduce","_.zipObject","_.sortBy","_.pick","util.partition","last","_.last","maxRank","util.maxRank","util.buildLayerMatrix","_.cloneDeep","_.forIn","_.mapValues","_.merge","util.asNonCompoundGraph","_.forOwn","util.notime","acyclic.run","nestingGraph.run","util.removeEmptyRanks","nestingGraph.cleanup","util.normalizeRanks","normalize.run","coordinateSystem.adjust","normalize.undo","coordinateSystem.undo","acyclic.undo","_.defaults","util.intersectRect"],"mappings":";;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE;AACxB,EAAE,OAAO,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC;AACnE;;ACXA;AACA,IAAI,eAAe,GAAG,CAAC;AACvB,IAAI,kBAAkB,GAAG,CAAC;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,KAAK,EAAE;AAC1B,EAAE,OAAO,SAAS,CAAC,KAAK,EAAE,eAAe,GAAG,kBAAkB,CAAC;AAC/D;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE;AACjC,EAAE,OAAO,MAAM,IAAI;AACnB,MAAM;AACN,MAAM,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC;AACrD;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;AAClC,EAAE,OAAO,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC;AAC7D;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE;AAC9B,EAAE,OAAO,KAAK,GAAG,KAAK;AACtB;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49]}